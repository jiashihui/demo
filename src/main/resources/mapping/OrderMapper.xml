<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.Order" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <id column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="order_date" property="orderDate" jdbcType="TIMESTAMP" />
    <result column="order_address" property="orderAddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, user_id, product_id, price, order_date, order_address
  </sql>

  <!-- 2018-07-16 -->
  <sql id="user_Column_List" >
    user_id, user_name, password, phone, address
  </sql>

  <!-- 2018-07-16 -->
  <select id="getOrders" resultMap="getOrderMap">
    select
    <include refid="Base_Column_List" />
    from t_order
  </select>
  <resultMap type="com.example.demo.model.Order" id="getOrderMap">
    <id column="id" property="id"/>
    <result column="number" property="number"/>
    <!-- select:指定延迟加载需要执行的statement的id（根据user_id查询的statement）
                如果不在本文件中，需要加上namespace
         property:resultMap中type指定类中的属性名
         column:和select查询关联的字段user_id
     -->
    <association property="user" javaType="com.example.demo.model.User"  column="user_id" select="getUserByUserId"></association>
  </resultMap>
  <select id="getUserByUserId" resultType="com.example.demo.model.User">
    select
    <include refid="user_Column_List"/>
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.demo.model.Order" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where order_id = #{orderId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.model.Order" >
    delete from t_order
    where order_id = #{orderId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Order" >
    insert into t_order (order_id, user_id, product_id, 
      price, order_date, order_address
      )
    values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{orderDate,jdbcType=TIMESTAMP}, #{orderAddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="orderDate != null" >
        order_date,
      </if>
      <if test="orderAddress != null" >
        order_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="orderDate != null" >
        #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAddress != null" >
        #{orderAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Order" >
    update t_order
    <set >
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="orderDate != null" >
        order_date = #{orderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAddress != null" >
        order_address = #{orderAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Order" >
    update t_order
    set price = #{price,jdbcType=DECIMAL},
      order_date = #{orderDate,jdbcType=TIMESTAMP},
      order_address = #{orderAddress,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=VARCHAR}
      and user_id = #{userId,jdbcType=INTEGER}
      and product_id = #{productId,jdbcType=VARCHAR}
  </update>
</mapper>